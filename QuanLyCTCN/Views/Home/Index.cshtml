@model QuanLyCTCN.Models.ViewModels.TrangChuViewModel

@{
    ViewData["Title"] = "Tổng quan tài chính";
    Layout = "_Layout";
}

<style>
    :root {
        --success-color: #10b981;
        --danger-color: #ef4444;
        --warning-color: #f59e0b;
        --info-color: #3b82f6;
        --light-bg: #f8fafc;
        --border-color: #e2e8f0;
    }

    body {
        background-color: var(--light-bg);
        font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }

    .main-content {
        padding: 1rem;
    }

    .transactions-card {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        border: 1px solid var(--border-color);
    }

    .transaction-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 1rem 0;
        border-bottom: 1px solid #f1f5f9;
    }

    .transaction-item:last-child {
        border-bottom: none;
    }

    .transaction-icon {
        width: 40px;
        height: 40px;
        border-radius: 8px;
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 1rem;
    }

    .transaction-icon.expense {
        background-color: #fef2f2;
        color: var(--danger-color);
    }

    .transaction-icon.income {
        background-color: #f0fdf4;
        color: var(--success-color);
    }

    .transaction-details h6 {
        margin: 0;
        font-size: 0.875rem;
        font-weight: 500;
        color: #1e293b;
    }

    .transaction-details p {
        margin: 0;
        font-size: 0.75rem;
        color: #64748b;
    }

    .transaction-amount {
        font-weight: 600;
    }

    .transaction-amount.expense {
        color: var(--danger-color);
    }

    .transaction-amount.income {
        color: var(--success-color);
    }

    .transaction-category {
        font-size: 0.75rem;
        color: #64748b;
    }

    .icon-bg-income {
        background-color: #dbeafe;
        color: var(--info-color);
    }

    .icon-bg-expense {
        background-color: #fef2f2;
        color: var(--danger-color);
    }

    .chart-container {
        background: white;
        border-radius: 12px;
        padding: 1.5rem;
        border: 1px solid var(--border-color);
        height: 400px;
        display: flex;
        flex-direction: column;
    }

    .chart-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 1rem;
    }

    .chart-title {
        margin: 0;
        font-size: 1.1rem;
        font-weight: 600;
        color: #1e293b;
    }

    canvas {
        flex: 1;
        max-height: 300px;
        width: 100% !important;
        height: auto !important;
    }
</style>

<div class="container-fluid" style="padding: 0;">
    <!-- Stats Cards -->
            <div class="row mb-4">
                <div class="col-md-4 mb-3">
                    <div class="stats-card">
                        <div class="stats-card-header">
                            <div>
                                <p class="stats-card-title">Tổng thu nhập tháng này</p>
                                <h3 class="stats-card-value">@Model.TongThuNhapThangHienTai.ToString("N0")đ</h3>
                                <div class="stats-card-change positive">
                                    <i class="fas fa-wallet me-1"></i>
                                    Tháng @DateTime.Now.Month/@DateTime.Now.Year
                                </div>
                            </div>
                            <div class="icon-bg-income rounded p-2">
                                <i class="fas fa-chart-line"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="stats-card">
                        <div class="stats-card-header">
                            <div>
                                <p class="stats-card-title">Tổng chi tiêu tháng này</p>
                                <h3 class="stats-card-value">@Model.TongChiTieuThangHienTai.ToString("N0")đ</h3>
                                <div class="stats-card-change negative">
                                    <i class="fas fa-shopping-cart me-1"></i>
                                    Tháng @DateTime.Now.Month/@DateTime.Now.Year
                                </div>
                            </div>
                            <div class="icon-bg-expense rounded p-2">
                                <i class="fas fa-chart-bar"></i>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4 mb-3">
                    <div class="stats-card">
                        <div class="stats-card-header">
                            <div>
                                <p class="stats-card-title">Số dư tháng này</p>
                                <h3 class="stats-card-value">@Model.SoDuHienTai.ToString("N0")đ</h3>
                                <div class="stats-card-change @(Model.SoDuHienTai >= 0 ? "positive" : "negative")">
                                    <i class="fas @(Model.SoDuHienTai >= 0 ? "fa-circle" : "fa-arrow-down") me-1"></i>
                                    @(Model.SoDuHienTai >= 0 ? "Khả dụng" : "Âm")
                                </div>
                            </div>
                            <div class="icon-bg-balance rounded p-2">
                                <i class="fas fa-wallet"></i>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Charts Row -->
            <div class="row mb-4">
                <div class="col-md-6 mb-3">
                    <div class="chart-container">
                        <div class="chart-header">
                            <h5 class="chart-title">Chi tiêu theo danh mục</h5>
                            <small class="text-muted">Số danh mục: @Model.ChiTieuTheoDanhMuc.Count()</small>
                        </div>
                        @if (Model.ChiTieuTheoDanhMuc.Any())
                        {
                            <canvas id="expenseChart"></canvas>
                        }
                        else
                        {
                            <div class="text-center text-muted py-4">
                                <i class="fas fa-chart-pie fa-3x mb-3"></i>
                                <p>Chưa có dữ liệu chi tiêu trong tháng này</p>
                                <p class="small">Hãy thêm chi tiêu để xem biểu đồ.</p>
                            </div>
                        }
                    </div>
                </div>
                <div class="col-md-6 mb-3">
                    <div class="chart-container">
                        <div class="chart-header">
                            <h5 class="chart-title">Xu hướng thu chi</h5>
                            <small class="text-muted">Thu nhập: @Model.ThuNhapTheoThoiGian.Count() | Chi tiêu: @Model.ChiTieuTheoThoiGian.Count()</small>
                        </div>
                        @if (Model.ThuNhapTheoThoiGian.Any() || Model.ChiTieuTheoThoiGian.Any())
                        {
                            <canvas id="trendChart"></canvas>
                        }
                        else
                        {
                            <div class="text-center text-muted py-4">
                                <i class="fas fa-chart-line fa-3x mb-3"></i>
                                <p>Chưa có dữ liệu thu nhập hoặc chi tiêu trong 2 tuần qua</p>
                                <p class="small">Hãy thêm thu nhập hoặc chi tiêu để xem xu hướng.</p>
                            </div>
                        }
                    </div>
                </div>
            </div>

            <!-- Recent Transactions -->
            <div class="transactions-card">
                <div class="chart-header">
                    <h5 class="chart-title">Giao dịch gần đây</h5>
                    <div>
                        <a asp-controller="ChiTieu" asp-action="Index" class="text-primary text-decoration-none me-3">Xem chi tiêu</a>
                        <a asp-controller="ThuNhap" asp-action="Index" class="text-success text-decoration-none">Xem thu nhập</a>
                    </div>
                </div>

                @if (Model.ChiTieuGanDay.Any())
                {
                    <div class="mb-3">
                        <h6 class="text-muted mb-2">Chi tiêu gần đây</h6>
                        @foreach (var chiTieu in Model.ChiTieuGanDay)
                        {
                            <div class="transaction-item">
                                <div class="d-flex align-items-center">
                                    <div class="transaction-icon expense">
                                        <i class="fas fa-shopping-cart"></i>
                                    </div>
                                    <div class="transaction-details">
                                        <h6>@chiTieu.GhiChu</h6>
                                        <p>@chiTieu.NgayChi.ToString("dd/MM/yyyy")</p>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <div class="transaction-amount expense">-@chiTieu.SoTien.ToString("N0")đ</div>
                                    <div class="transaction-category">@chiTieu.DanhMuc?.TenDanhMuc</div>
                                </div>
                            </div>
                        }
                    </div>
                }

                @if (Model.ThuNhapGanDay.Any())
                {
                    <div>
                        <h6 class="text-muted mb-2">Thu nhập gần đây</h6>
                        @foreach (var thuNhap in Model.ThuNhapGanDay)
                        {
                            <div class="transaction-item">
                                <div class="d-flex align-items-center">
                                    <div class="transaction-icon income">
                                        <i class="fas fa-money-bill-wave"></i>
                                    </div>
                                    <div class="transaction-details">
                                        <h6>@thuNhap.GhiChu</h6>
                                        <p>@thuNhap.NgayNhap.ToString("dd/MM/yyyy")</p>
                                    </div>
                                </div>
                                <div class="text-end">
                                    <div class="transaction-amount income">+@thuNhap.SoTien.ToString("N0")đ</div>
                                    <div class="transaction-category">@thuNhap.DanhMuc?.TenDanhMuc</div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>

@section HeaderActions {
    <a asp-controller="ChiTieu" asp-action="Create" class="btn btn-primary-custom me-2">
        <i class="fas fa-minus me-2"></i>
        Thêm chi tiêu
    </a>
    <a asp-controller="ThuNhap" asp-action="Create" class="btn btn-success">
        <i class="fas fa-plus me-2"></i>
        Thêm thu nhập
    </a>
}

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Prepare data for charts
        const expenseLabels = @Html.Raw(Json.Serialize(Model.ChiTieuTheoDanhMuc.Select(c => c.DanhMuc?.TenDanhMuc ?? "Chưa phân loại").ToArray()));
        const expenseData = @Html.Raw(Json.Serialize(Model.ChiTieuTheoDanhMuc.Select(c => c.TongTien).ToArray()));

        const incomeLabels = @Html.Raw(Json.Serialize(Model.ThuNhapTheoThoiGian.Any() ? Model.ThuNhapTheoThoiGian.Select(t => t.Ngay.ToString("dd/MM")).Take(15).ToArray() : new[] { "Không có dữ liệu" }));
        const incomeData = @Html.Raw(Json.Serialize(Model.ThuNhapTheoThoiGian.Any() ? Model.ThuNhapTheoThoiGian.Select(t => t.TongTien / 1000000).Take(15).ToArray() : new[] { 0 }));
        const expenseTrendData = @Html.Raw(Json.Serialize(Model.ChiTieuTheoThoiGian.Any() ? Model.ChiTieuTheoThoiGian.Select(t => t.TongTien / 1000000).Take(15).ToArray() : new[] { 0 }));

        // Expense Pie Chart
        if (document.getElementById('expenseChart')) {
            console.log('Creating expense chart...');
            const expenseCtx = document.getElementById('expenseChart').getContext('2d');
            const expenseChart = new Chart(expenseCtx, {
                type: 'pie',
                data: {
                    labels: expenseLabels,
                    datasets: [{
                        data: expenseData,
                        backgroundColor: [
                            '#f59e0b',
                            '#6366f1', 
                            '#10b981',
                            '#ef4444',
                            '#8b5cf6',
                            '#0ea5e9',
                            '#ec4899',
                            '#14b8a6',
                            '#f43f5e',
                            '#64748b'
                        ],
                        borderWidth: 2,
                        borderColor: '#ffffff'
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'bottom',
                            labels: {
                                usePointStyle: true,
                                padding: 20,
                                font: {
                                    size: 12
                                }
                            }
                        }
                    }
                }
            });
            console.log('Expense chart created successfully');
        } else {
            console.log('Expense chart canvas not found');
        }

        // Trend Bar Chart
        if (document.getElementById('trendChart')) {
            console.log('Creating trend chart...');
            const trendCtx = document.getElementById('trendChart').getContext('2d');
            const trendChart = new Chart(trendCtx, {
                type: 'bar',
                data: {
                    labels: incomeLabels,
                    datasets: [{
                        label: 'Thu nhập',
                        data: incomeData,
                        backgroundColor: '#10b981',
                        borderColor: '#10b981',
                        borderWidth: 1
                    }, {
                        label: 'Chi tiêu',
                        data: expenseTrendData,
                        backgroundColor: '#ef4444',
                        borderColor: '#ef4444',
                        borderWidth: 1
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            position: 'top',
                            align: 'end',
                            labels: {
                                usePointStyle: true,
                                padding: 20,
                                font: {
                                    size: 12
                                }
                            }
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: '#f1f5f9'
                            },
                            ticks: {
                                callback: function(value) {
                                    return value + 'M₫';
                                }
                            }
                        },
                        x: {
                            grid: {
                                color: '#f1f5f9'
                            }
                        }
                    }
                }
            });
            console.log('Trend chart created successfully');
        } else {
            console.log('Trend chart canvas not found');
        }
    </script>
}
