@model QuanLyCTCN.Models.ViewModels.ThongKeViewModel

@{
    ViewData["Title"] = "Thống kê tổng quan";
    ViewData["Subtitle"] = $"Từ {Model.NgayBatDau:dd/MM/yyyy} đến {Model.NgayKetThuc:dd/MM/yyyy}";
}

@section HeaderActions {
    <div class="d-flex gap-2">
        @{
            var today = DateTime.Today;
        }
        
        <a href="@Url.Action("Index")?thang=@today.Month&nam=@today.Year" class="btn btn-outline-primary btn-sm">
            <i class="fas fa-calendar-alt"></i> Tháng này
        </a>
        <a href="@Url.Action("Index")?thang=0&nam=@today.Year" class="btn btn-outline-primary btn-sm">
            <i class="fas fa-calendar"></i> Năm này
        </a>
    </div>
}

<div class="row mb-4">
    <div class="col-md-3">
        <div class="stats-card">
            <div class="stats-card-header">
                <h6 class="stats-card-title">Tổng thu nhập</h6>
                <i class="fas fa-arrow-up text-success"></i>
            </div>
            <div class="stats-card-value text-success">@Model.TongThuNhap.ToString("N0") VND</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stats-card">
            <div class="stats-card-header">
                <h6 class="stats-card-title">Tổng chi tiêu</h6>
                <i class="fas fa-arrow-down text-danger"></i>
            </div>
            <div class="stats-card-value text-danger">@Model.TongChiTieu.ToString("N0") VND</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stats-card">
            <div class="stats-card-header">
                <h6 class="stats-card-title">Số dư</h6>
                <i class="fas fa-balance-scale @(Model.TongSoDu >= 0 ? "text-success" : "text-danger")"></i>
            </div>
            <div class="stats-card-value @(Model.TongSoDu >= 0 ? "text-success" : "text-danger")">@Model.TongSoDu.ToString("N0") VND</div>
        </div>
    </div>
    <div class="col-md-3">
        <div class="stats-card">
            <div class="stats-card-header">
                <h6 class="stats-card-title">Tỷ lệ tiết kiệm</h6>
                <i class="fas fa-piggy-bank text-info"></i>
            </div>
            <div class="stats-card-value text-info">
                @(Model.TongThuNhap > 0 ? Math.Round((Model.TongSoDu / Model.TongThuNhap) * 100, 1) : 0)%
            </div>
        </div>
    </div>
</div>

<!-- Filter Section -->
<div class="row mb-4">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <form asp-action="Index" method="get" class="d-flex gap-3 align-items-end">
                    <!-- Chỉ giữ lọc theo tháng thu nhập -->
                    <div class="form-group">
                        <label class="form-label">Tháng</label>
                        <select name="thang" class="form-control">
                            @for (int i = 1; i <= 12; i++)
                            {
                                <option value="@i" selected="@(Model.Thang == i)">Tháng @i</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label class="form-label">Năm</label>
                        <select name="nam" class="form-control">
                            @for (int i = DateTime.Today.Year - 5; i <= DateTime.Today.Year + 1; i++)
                            {
                                <option value="@i" selected="@(Model.Nam == i)">@i</option>
                            }
                        </select>
                    </div>
                    
                    <!-- Buttons -->
                    <button type="submit" class="btn btn-primary">
                        <i class="fas fa-filter"></i> Lọc
                    </button>
                    <a href="@Url.Action("Index")" class="btn btn-secondary">
                        <i class="fas fa-undo"></i> Đặt lại
                    </a>
                </form>
            </div>
        </div>
    </div>
</div>

<div class="row mb-4">
    <div class="col-md-6">
        <div class="chart-container">
            <div class="chart-header">
                <h5 class="chart-title">Thu nhập theo danh mục</h5>
            </div>
            <canvas id="thuNhapChart" width="400" height="300"></canvas>
        </div>
    </div>
    <div class="col-md-6">
        <div class="chart-container">
            <div class="chart-header">
                <h5 class="chart-title">Chi tiêu theo danh mục</h5>
            </div>
            <canvas id="chiTieuChart" width="400" height="300"></canvas>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Chi tiết thu nhập theo danh mục</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Danh mục</th>
                                <th>Số tiền</th>
                                <th>Phần trăm</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ThuNhapTheoDanhMuc)
                            {
                                <tr>
                                    <td>@item.DanhMuc.TenDanhMuc</td>
                                    <td class="text-success">@item.TongTien.ToString("N0") VND</td>
                                    <td>@item.PhanTram%</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Chi tiết chi tiêu theo danh mục</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Danh mục</th>
                                <th>Số tiền</th>
                                <th>Phần trăm</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.ChiTieuTheoDanhMuc)
                            {
                                <tr>
                                    <td>@item.DanhMuc.TenDanhMuc</td>
                                    <td class="text-danger">@item.TongTien.ToString("N0") VND</td>
                                    <td>@item.PhanTram%</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Dữ liệu cho biểu đồ thu nhập theo danh mục
        @{
            var thuNhapLabelsList = new List<string>();
            var thuNhapDataList = new List<double>();
            foreach (var item in Model.ThuNhapTheoDanhMuc)
            {
                thuNhapLabelsList.Add(item.DanhMuc.TenDanhMuc);
                thuNhapDataList.Add((double)item.TongTien);
            }

            var chiTieuLabelsList = new List<string>();
            var chiTieuDataList = new List<double>();
            foreach (var item in Model.ChiTieuTheoDanhMuc)
            {
                chiTieuLabelsList.Add(item.DanhMuc.TenDanhMuc);
                chiTieuDataList.Add((double)item.TongTien);
            }

            var thoiGianLabelsList = new List<string>();
            var thuNhapThoiGianList = new List<double>();
            var chiTieuThoiGianList = new List<double>();

            // Tạo danh sách tất cả ngày có dữ liệu (thu nhập hoặc chi tiêu)
            var allDates = Model.ThuNhapTheoThoiGian.Select(t => t.Ngay)
                .Union(Model.ChiTieuTheoThoiGian.Select(c => c.Ngay))
                .OrderBy(d => d)
                .ToList();

            // Tạo labels và data tương ứng cho từng ngày
            foreach (var date in allDates)
            {
                thoiGianLabelsList.Add(date.ToString("dd/MM"));

                // Tìm thu nhập tương ứng với ngày này
                var thuNhap = Model.ThuNhapTheoThoiGian.FirstOrDefault(t => t.Ngay == date);
                thuNhapThoiGianList.Add(thuNhap != null ? (double)thuNhap.TongTien : 0);

                // Tìm chi tiêu tương ứng với ngày này
                var chiTieu = Model.ChiTieuTheoThoiGian.FirstOrDefault(c => c.Ngay == date);
                chiTieuThoiGianList.Add(chiTieu != null ? (double)chiTieu.TongTien : 0);
            }
        }
        const thuNhapLabels = @Html.Raw(Json.Serialize(thuNhapLabelsList));
        const thuNhapData = @Html.Raw(Json.Serialize(thuNhapDataList));

        // Dữ liệu cho biểu đồ chi tiêu theo danh mục
        const chiTieuLabels = @Html.Raw(Json.Serialize(chiTieuLabelsList));
        const chiTieuData = @Html.Raw(Json.Serialize(chiTieuDataList));

        // Dữ liệu cho biểu đồ theo thời gian
        const thoiGianLabels = @Html.Raw(Json.Serialize(thoiGianLabelsList));
        const thuNhapThoiGianData = @Html.Raw(Json.Serialize(thuNhapThoiGianList));
        const chiTieuThoiGianData = @Html.Raw(Json.Serialize(chiTieuThoiGianList));

        // Biểu đồ thu nhập theo danh mục
        const thuNhapChart = new Chart(document.getElementById('thuNhapChart'), {
            type: 'pie',
            data: {
                labels: thuNhapLabels,
                datasets: [{
                    data: thuNhapData,
                    backgroundColor: [
                        '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.label + ': ' + new Intl.NumberFormat('vi-VN').format(context.parsed) + ' VND';
                            }
                        }
                    }
                }
            }
        });

        // Biểu đồ chi tiêu theo danh mục
        const chiTieuChart = new Chart(document.getElementById('chiTieuChart'), {
            type: 'pie',
            data: {
                labels: chiTieuLabels,
                datasets: [{
                    data: chiTieuData,
                    backgroundColor: [
                        '#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0', '#9966FF', '#FF9F40'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'bottom',
                    },
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.label + ': ' + new Intl.NumberFormat('vi-VN').format(context.parsed) + ' VND';
                            }
                        }
                    }
                }
            }
        });

        // Biểu đồ xu hướng theo thời gian
        const thoiGianChart = new Chart(document.getElementById('thoiGianChart'), {
            type: 'line',
            data: {
                labels: thoiGianLabels,
                datasets: [{
                    label: 'Thu nhập',
                    data: thuNhapThoiGianData,
                    borderColor: '#28a745',
                    backgroundColor: 'rgba(40, 167, 69, 0.1)',
                    tension: 0.4
                }, {
                    label: 'Chi tiêu',
                    data: chiTieuThoiGianData,
                    borderColor: '#dc3545',
                    backgroundColor: 'rgba(220, 53, 69, 0.1)',
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.dataset.label + ': ' + new Intl.NumberFormat('vi-VN').format(context.parsed.y) + ' VND';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return new Intl.NumberFormat('vi-VN').format(value) + ' VND';
                            }
                        }
                    }
                }
            }
        });
    </script>

    <script>
        $(document).ready(function() {
            console.log('JavaScript loaded'); // Debug
            
            // Function để toggle containers
            function toggleContainers() {
                var selectedValue = $('input[name="loaiLoc"]:checked').val();
                console.log('Selected value:', selectedValue); // Debug
                
                if (selectedValue === 'NgayNhap') {
                    console.log('Showing ngayNhapContainer, hiding thangThuNhapContainer'); // Debug
                    $('#ngayNhapContainer').removeClass('d-none').addClass('d-flex');
                    $('#thangThuNhapContainer').removeClass('d-flex').addClass('d-none');
                    
                    // Enable ngày nhập fields, disable tháng thu nhập fields
                    $('#ngayNhapContainer input, #ngayNhapContainer select').prop('disabled', false);
                    $('#thangThuNhapContainer select').prop('disabled', true);
                } else if (selectedValue === 'ThangThuNhap') {
                    console.log('Showing thangThuNhapContainer, hiding ngayNhapContainer'); // Debug
                    $('#ngayNhapContainer').removeClass('d-flex').addClass('d-none');
                    $('#thangThuNhapContainer').removeClass('d-none').addClass('d-flex');
                    
                    // Enable tháng thu nhập fields, disable ngày nhập fields
                    $('#thangThuNhapContainer select').prop('disabled', false);
                    $('#ngayNhapContainer input, #ngayNhapContainer select').prop('disabled', true);
                }
            }
            
            // Xử lý thay đổi radio button
            $('input[name="loaiLoc"]').on('change', function() {
                console.log('Radio button changed:', $(this).val()); // Debug
                toggleContainers();
            });
            
            // Set trạng thái ban đầu
            toggleContainers();
            
            // Force trigger để đảm bảo
            setTimeout(function() {
                toggleContainers();
            }, 100);
        });
    </script>
}
