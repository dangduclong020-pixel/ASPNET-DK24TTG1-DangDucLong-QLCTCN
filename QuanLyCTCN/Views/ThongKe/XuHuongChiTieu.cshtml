@{
    ViewData["Title"] = "Xu hướng chi tiêu";
    ViewData["Subtitle"] = $"{ViewBag.SoThang} tháng gần nhất";
}

@section HeaderActions {
    <div class="d-flex gap-2">
        <form method="get" class="d-flex gap-2">
            <select name="soThang" class="form-select form-select-sm" onchange="this.form.submit()">
                <option value="3" selected="@(ViewBag.SoThang == 3)">3 tháng</option>
                <option value="6" selected="@(ViewBag.SoThang == 6)">6 tháng</option>
                <option value="12" selected="@(ViewBag.SoThang == 12)">12 tháng</option>
                <option value="24" selected="@(ViewBag.SoThang == 24)">24 tháng</option>
            </select>
        </form>
    </div>
}

<div class="row mb-4">
    <div class="col-12">
        <div class="chart-container">
            <div class="chart-header">
                <h5 class="chart-title">Xu hướng thu nhập và chi tiêu theo thời gian</h5>
            </div>
            <canvas id="xuHuongChart" width="800" height="400"></canvas>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-header">
                <h6 class="card-title mb-0">Chi tiết theo tháng</h6>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-hover">
                        <thead>
                            <tr>
                                <th>Tháng/Năm</th>
                                <th>Thu nhập</th>
                                <th>Chi tiêu</th>
                                <th>Số dư</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ViewBag.ThongKe)
                            {
                                var soDu = item.Item2 - item.Item3;
                                <tr>
                                    <td>@item.Item1</td>
                                    <td class="text-success">@item.Item2.ToString("N0") VND</td>
                                    <td class="text-danger">@item.Item3.ToString("N0") VND</td>
                                    <td class="@(soDu >= 0 ? "text-success" : "text-danger")">@soDu.ToString("N0") VND</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        // Dữ liệu cho biểu đồ xu hướng
        @{
            var thongKeList = ViewBag.ThongKe;
            var xuHuongLabelsList = new List<string>();
            var thuNhapXuHuongList = new List<double>();
            var chiTieuXuHuongList = new List<double>();
            foreach (var item in thongKeList)
            {
                xuHuongLabelsList.Add(item.Item1);
                thuNhapXuHuongList.Add((double)item.Item2);
                chiTieuXuHuongList.Add((double)item.Item3);
            }
        }
        const xuHuongLabels = @Html.Raw(Json.Serialize(xuHuongLabelsList));
        const thuNhapXuHuongData = @Html.Raw(Json.Serialize(thuNhapXuHuongList));
        const chiTieuXuHuongData = @Html.Raw(Json.Serialize(chiTieuXuHuongList));

        // Biểu đồ xu hướng
        const xuHuongChart = new Chart(document.getElementById('xuHuongChart'), {
            type: 'line',
            data: {
                labels: xuHuongLabels,
                datasets: [{
                    label: 'Thu nhập',
                    data: thuNhapXuHuongData,
                    borderColor: '#28a745',
                    backgroundColor: 'rgba(40, 167, 69, 0.1)',
                    tension: 0.4
                }, {
                    label: 'Chi tiêu',
                    data: chiTieuXuHuongData,
                    borderColor: '#dc3545',
                    backgroundColor: 'rgba(220, 53, 69, 0.1)',
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function(context) {
                                return context.dataset.label + ': ' + new Intl.NumberFormat('vi-VN').format(context.parsed.y) + ' VND';
                            }
                        }
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function(value) {
                                return new Intl.NumberFormat('vi-VN').format(value) + ' VND';
                            }
                        }
                    }
                }
            }
        });
    </script>
}
